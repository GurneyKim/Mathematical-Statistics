/* Newton-Raphson method for MLE computing */
/* mle1.iml                                */

proc iml;
   theta = 1;                               /* user-supplied initial value     */
   maxtol = 0.0001;  maxiter = 10000;

   start ell;
      n = {6,1,1,1,0,1};
      p = j(6,1,0);  p1 = j(6,1,0);  p2 = j(6,1,0);
      do j=1 to 6;
         p[j]  = exp(-(j-1)*theta)-exp(-j*theta);
         p1[j] = j*exp(-j*theta)-(j-1)*exp(-(j-1)*theta);
         p2[j] = (j-1)*(j-1)*exp(-(j-1)*theta)-j*j*exp(-j*theta);
      end;
      lik  = 0;                             /* user-supplied log-likelihood     */
      do j=1 to 6;  lik = lik + n[j]*log(p[j]);  end;
      lik1 = 0;                             /* first derivative                 */
      do j=1 to 6;  lik1 = lik1 + n[j]*p1[j]/p[j];  end;
      lik2 = 0;                             /* second derivative                */
      do j=1 to 6;  lik2 = lik2 + n[j]*(p2[j]/p[j]-p1[j]*p1[j]/(p[j]*p[j]));  end;
   finish;

   iter = 0;
   tol  = 1;
   do while (iter <= maxiter & tol > maxtol);
      run ell;
      theta1 = theta - lik1/lik2;
      tol = abs(theta1 - theta);
      theta = theta1;
      iter = iter + 1;
   end;

   print iter theta[format=12.4] lik1[format=12.4] lik[format=12.4];
quit;
